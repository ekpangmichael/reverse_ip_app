name: Build and Push Docker Images
on:
  workflow_call:
    inputs:
      repository:
        required: true
        type: string
      image_tag:
        description: Custom image tag
        required: false
        type: string
      environment:
        description: 'environment name'
        required: false
        type: string
      docker_path:
        required: false
        default: .
        type: string
      docker_file_path:
        required: false
        default: ./Dockerfile
        type: string
        description: --file argument to pass  for docker build
      artifact_name:
        required: false
        type: string
        description: Name of the artifact to download
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      BUILD_ARGS:
        required: false
    outputs:
      ecrRegistry:
        description: The ecr registry where the image is uploaded
        value: ${{ jobs.build.outputs.ecrRegistry }}
      imageTag:
        description: The image tag
        value: ${{ jobs.build.outputs.imageTag }}
      tag:
        description: The image tag
        value: ${{ jobs.build.outputs.outcome }}
jobs:
  build:
    outputs:
      outcome: ${{ steps.set-tag.outputs.image-tag }}
      ecrRegistry: ${{ steps.login-ecr.outputs.registry }}
      imageTag: ${{ steps.set-tag.outputs.imageTag }}
    name: Build and Publish Image
    runs-on: ubuntu-latest

    steps:
    - name: Check out code
      uses: actions/checkout@v4

    - name: Download artifact
      if: ${{ inputs.artifact_name }}
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.artifact_name }}

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-west-1
        mask-aws-account-id: false

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
      with:
        mask-password: 'true'

    - name: Build and Tag
      id: set-tag
      env:
        ECR_REPOSITORY: ${{ inputs.repository }}
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: ${{ inputs.image_tag || inputs.environment && format('{0}-{1}',inputs.environment,github.sha) || github.sha }}
      run: |
        docker build ${{ secrets.BUILD_ARGS }} -f ${{inputs.docker_file_path}} -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ${{ inputs.docker_path }}
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        echo "image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
        echo "imageTag=$IMAGE_TAG" >> $GITHUB_OUTPUT